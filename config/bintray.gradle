apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        exclude '**/R.html', '**/R.*.html', '**/index.html'
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.javadocDeps

        android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                owner.classpath += variant.javaCompile.classpath
            }
        }
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
String propertiesPath = 'local.properties'
try {
    properties.load(project.rootProject.file(propertiesPath).newDataInputStream())
} catch(Exception ignored) {
    println("Could not find property file: $propertiesPath")
}

bintray {
    user = properties.getProperty("bintray.user")
    validateProp(user, "bintray.user")

    key = properties.getProperty("bintray.apikey")
    validateProp(key, "bintray.key")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                validateProp(passphrase, "bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

private void validateProp(String propertyValue, String propertyName) {
    if (propertyValue == null || propertyValue.isEmpty()) {
        throw new IllegalArgumentException("Misssing " + propertyName + " at local.properties")
    }
}